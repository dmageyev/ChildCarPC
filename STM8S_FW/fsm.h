/**
  **********************************************************
  * @file    fsm.h
  * @author  Ageyev D.V.
  * @version V1.0
  * @date    7-aug-2013
  * @brief   This file contains all definitions for FSM.
  **********************************************************
  * @attention
  *
  **********************************************************
  */

/* Define to prevent recursive inclusion -----------------*/
#ifndef __FSM_H
#define __FSM_H

/* Includes --------------------------------------------------------------------------------*/
# include "sys_conf.h"
# include "system.h"

/* Exported types --------------------------------------------------------------------------*/


typedef enum {
    sHLAMP_OFF,					    // фары выключены
		sHLAMP_FAR_ON,			    // Дальний свет включен
		sHLAMP_NEAR_ON			    // Ближний свет включен
} tHeadlampFSMState;

typedef enum {
		sRLamp_OFF,							// Повороты выключены
		sRLamp_IDLE,						// Неактивное состояние
		sRLamp_LEFT_ON,					// Включен поворот налево
		sRLamp_RIGHT_ON,				// Включен поворот направо
		sRLamp_FAILT,						// Аварийный сигнал
		sRLamp_FAILT_LEFT_ON,		// Аварийный сигнал и поворот налево
		sRLamp_FAILT_RIGHT_ON,	// Аварийный сигнал и поворот направо
} tRLampFSMState;

typedef enum {
		sPLAMP_OFF,							// Габариты выключены
		sPLAMP_ON,					    // Габариты включены
} tParklampFSMState;
						 
/* Exported constants -----------------------------------------------------------------------*/
/* Exported macro ---------------------------------------------------------------------------*/

/* ----------------------------------- Описание пинов ---------------------------------------*/
/* !!!!!!!!                           В Н И М А Н И Е                              !!!!!!!!! */
/* !! ------------------------------------------------------------------------------------!! */
/* !!   Необходимо настроить также массив ShRegHandlList в файле main.c                   !! */
/* ------------------------------------------------------------------------------------------*/
/* FF      Format:        <array name>, <byte num>, <pin num>, <H | L>                    FF */
/* ------------------------------------------------------------------------------------------*/

/* ------------------------------------------------------------------------------------------*/
/* PP                Фары (ближний и дальний свет), габариты                              PP */
/* ------------------------------------------------------------------------------------------*/
/* -----------------------  Входы  ----------------------------------------------------------*/
#define FAR_HLAMP_SWITCH  SPI_Fast_IO,  1,  0,  L      /* Переключатель Бл./Дальн.           */
#define HLAMP_KEY         SPI_Fast_IO,  1,  1,  L      /* Кнопка включения фар               */
#define PARK_LAMP_KEY 		SPI_Fast_IO,  1,  2,  L      /* Кнопка включения габаритов         */
/* -----------------------  Выходы  ---------------------------------------------------------*/
#define FAR_HLAMP_PIN			SPI_Slow_Out, 0,  2,  H      /* Дальний свет                       */
#define NEAR_HLAMP_PIN		SPI_Slow_Out, 0,  1,  H      /* Ближний свет                       */
#define PARK_LAMP_PIN 		SPI_Slow_Out, 0,  0,  H      /* Габариты                           */

/* ------------------------------------------------------------------------------------------*/
/* РР                 Повороты и аварийный сигнал                                         РР */
/* ------------------------------------------------------------------------------------------*/
/* -----------------------  Входы  ----------------------------------------------------------*/
#define LFT_TLAMP_KEY 		SPI_Fast_IO,  1,  4,  L      /* Перекл-ль в левой позиции          */
#define RTH_TLAMP_KEY			SPI_Fast_IO,  1,  5,  L      /* Перекл-ль в правой позиции         */
#define	FAULT_KEY					SPI_Fast_IO,  1,  6,  L      /* Кнопка аварийного сигнала          */
#define LFT_TLAMP_HC 			SPI_Fast_IO,  0,  3,  L      /* Геркон левый                       */
#define RTH_TLAMP_HC			SPI_Fast_IO,  0,  2,  L      /* Геркон правый                      */
/* -----------------------  Выходы  ---------------------------------------------------------*/
#define LFT_TLAMP_PIN 		SPI_Fast_IO,  1,  0,  H      /* Лампы и индик. лев. поворота       */
#define RTH_TLAMP_PIN			SPI_Fast_IO,  1,  1,  H      /* Лампы и индик. прв. поворота       */
#define FAULT_LAMP_PIN		SPI_Fast_IO,  0,  0,  H      /* Лампа в кн-ке аварийного сигнала   */
#define RELE_TLAMP_PIN		SPI_Fast_IO,  0,  1,  H      /* Реле поворотов шелкает             */

/* ------------------------------------------------------------------------------------------*/
/*  PP                Стоп и задний ход                                                   РР */
/* ------------------------------------------------------------------------------------------*/
/* -----------------------  Входы  ----------------------------------------------------------*/
#define REVERSE_LAMP_HC		SPI_Fast_IO,  0,  4,  L      /* Геркон заднего хода                */
/* -----------------------  Выходы  ---------------------------------------------------------*/
#define REVERSE_LAMP_PIN	SPI_Fast_IO,  1,  3,  H      /* Лампа заднего хода                 */
#define STOP_LAMP_PIN			SPI_Fast_IO,  1,  2,  H      /* Лампы стоп сигнала                 */

/* ------------------------------------------------------------------------------------------*/
/*  PP                Зажигание кнопка и индикаторы                                       РР */
/* ------------------------------------------------------------------------------------------*/
/* -----------------------  Входы  ----------------------------------------------------------*/
#define START_KEY       	SPI_Fast_IO,  0,  0,  L      /* Кнопка зажигания                   */
/* -----------------------  Выходы  ---------------------------------------------------------*/
#define START_BLUE_LED  	SPI_Fast_IO,  1,  6,  H      /* Синий   индикатор зажигания        */
#define START_GREEN_LED		SPI_Fast_IO,  1,  7,  H      /* Зеленый индикатор зажигания        */

/* ------------------------------------------------------------------------------------------*/
/*  PP                Индикатор заряда батареи                                            РР */
/* ------------------------------------------------------------------------------------------*/
/* -----------------------  Входы  ----------------------------------------------------------*/
/* -----------------------  Выходы  ---------------------------------------------------------*/
#define BATT_RED_PIN	    SPI_Fast_IO,  1,  4,  H      /* Красный индикатор заряда           */
#define BATT_GREEN_PIN		SPI_Fast_IO,  1,  5,  H      /* Зеленый индикатор заряла           */

/*
  ********************************************************************************************* 
  *   Секция   прототипов   глобальных   функций  
  *********************************************************************************************
*/

/* --------------------------------------------------------------------------------------------  
 *  Function:       HLamp_FSM_Handl (...) 
 * -------------------------------------------------------------------------------------------- 
 *  description:    Обработчие событий для конечного автомата фар
 * 
 *  parameters:     tMsg *Msg      – обрабатывоемое сообщение 
 * 
 *  on return:      tMsgHndlResult -  результат обработки (обработано, пропушено)
 *                                                   < MSG_PROCESSED | MSG_PASSED >  
 *----------------------------------------------------------------------------------------- */
tMsgHndlResult HLamp_FSM_Handl    (tMsg *Msg);

void           TurnLamp_FSM_Init  (void);
tMsgHndlResult TurnLamp_FSM_Handl (tMsg *Msg);

#define PARKLAMP_NO_FSM                     /* Выбор простой реализации обработчика без FSM */
tMsgHndlResult ParkLamp_FSM_Handl (tMsg* Msg);


#endif /* __FSM_H */

/***    (C)COPYRIGHT 2013 Агеев Д.В.        ***END OF FILE ***                              */